# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
# *  DREAM input parameter file  *
# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*

# This example of input file lists all possible and allowed parameters
# and provides detailed explanations.  Only lines containing an equal 
# sign not preceded by a sharp sign "#" will be considered by the code,
# any other line will be ignored.
# If some parameter is not given, the code will assume the default value.
# However, not all parameters have a default value and some are essential.

# The standard syntax is: parameter_name = value
# A space before and after the "=" sign is necessary.



# ----------------
# ----> Cosmology:
# ----------------

# 1) Insert cosmological model.
#    See https://bdiemer.bitbucket.io/colossus/cosmology_cosmology.html
#    for available models.
#    The cosmological model needs to be always defined.
#    If not given, the code will assume as default: planck18.
cosmological_model = planck18



# ---------------------
# ----> Mass functions:
# ---------------------

# 1) Halo mass function.
#    Insert halo mass function model.
#    See https://bdiemer.bitbucket.io/colossus/lss_mass_function.html
#    for available models.
#    Default: tinker08
halo_mass_function = tinker08

# 2) Sub-halo mass function.
#    Currently developed only Jiang & vdB 2016, MNRAS 458, 2848-2869
#    This is assumed by default, no need to specify.



# ------------------------------
# ----> DM catalogue parameters:
# -------------...--------------

# 1) Insert the length of the cube side.
#    Units of [Mpc/h]
cube_side = 20

# 2) Insert parameters for the redshift interval.
#    This is the range in which the infall redshifts will be generated,
#    subhalos which have in-falled before z_max will not be calculated.
#    z_bin indicates the resolution in redshift.
z_min = 0
z_max = 6
z_bin = 0.1

# 3) Insert mass parameters for the host halos
#    M0_host_bin indicates the resolution in mass,
#    when drawing the halo mass function.
#    Units of [log10(M_sun)]
#    If you want outputs in [log10(M_sun/h)],
#    insert input parameters in those units.
M0_host_min = 12.
M0_host_max = 13.
M0_host_bin = 0.1

# 3.1) Declare the mass definition for the DM halos.
#      See https://bdiemer.bitbucket.io/colossus/halo_mass.html
#      for available definitions.
#      Default: 200m
mass_definition = 200m

# 3.2) State if you wish to calculate the accretion tracks:
#      1. using the mean track within discrete bins (saves time)
#      2. for every central halo
#      Options: 'yes' for option 1. 'no' for option 2.
#      Default: 'yes'
#use_mean_track = no

# 4) Insert parameters for the sub halo mass range
#    M_sub_bin indicates the resolution in mass,
#    when drawing the sub-halo mass function.
#    Units of [log10(M_sun)]
#    If you want outputs in [log10(M_sun/h)],
#    insert input parameters in those units.
M_sub_min = 10.
M_sub_max = 15.
M_sub_bin = 0.1

# 4.1) Maximum subhaloes order.
#      Insert the maximum order of subhaloes you want to generate.
#      Default = 3
max_order = 2



# ---------------------------
# ----> Mergers parameters:
# ---------------------------

# 1) This option allows to choose whether to generate the catalogue
#      via the full merger tree (more rigorous) or statistically.
#      If 'yes' the code will run the merger tree.
#      If 'no' the code will assign the infall redshift statistically,
#      making use of the PDF extracted via previous fits (recommended).
#      Default: 'no'
#use_merger_tree = no

# 2.) Merging timescale parameters

# 2.1) Orbital circularity
#        State how to assign orbital circularity to subhaloes.
#        Options: 'constant' or 'gaussian'
#        If set to 'constant', you need to specify also its value,
#        if the latter is not give will be set to 0.5 by default.
#        For more details, see:
#        https://ui.adsabs.harvard.edu/abs/2006A%26A...445..403K/abstract
#        https://ui.adsabs.harvard.edu/abs/2014MNRAS.439.3189S/abstract
#        Default: constant 0.5
#type_orbital_circularity = gaussian
#orbital_circularity = 0.5

# 2.2) Fudge factor
#        See Grylls et al. 2018 Sec. 3.1.4
#        Give a constant value.
#	 If positive, the code will assign constant fudge.
#	 If negative, the code will apply the linear relation
#	 for the fudge dependent on the mass ratio.
#	 A fudge=1 implies simply McCavana et al. 2012 merging timescale.
#	 A fudge=0.5 broadly fits the satellites population from simulations.
#	 A linear fudge (recommended) well fits the simulations.
#        Default: 0.5
fudge = -1

# 2.3) State if you want the code to calculate the redshift at full merging.
#        If 'yes', the code will calculate and store it in the output file.
#        Options: 'yes' or 'no'.
#        Default: 'no'.
#want_z_at_merge = yes



# ------------------------------
# ----> BM Catalogue parameters:
# ------------------------------

# 1) State if you want to generate the catalogue of galaxies.
#    Default = no
#want_galaxies = yes

# 2) State if the DM haloes catalogue already exists.
#    If yes, the code will read it from file from the output folder.
#    If not, the code will generate it using the parameters above.
#    Default: yes
exist_DM = yes

# 3) Insert the redshift at which you want to generate the catalogue
#    of central and satellite galaxies.
#    The satellites will be evolved from the time of infall.
satellites_redshift = 0.1

# 4) State if you want to ignore the evolution of satellites of order higher than 1.
#    Default: yes
ignore_high_orders = yes

# 5) Insert the SMHM relation model.
#    This will be used to assign the galaxies stellar mass to haloes.
#    Default: Grylls_2019
SMHM_model = Grylls_2019

# 6.1) State whether you want to include quenching in the evolution.
#      Default: no
include_quenching = yes

# 6.2) State whether you want to include stripping in the evolution.
#      (Not implemented yet)
#      Default: no
#include_stripping  = yes




# ---------------------------
# ----> Output parameters:
# ---------------------------

# 1) State if you want to save the read parameters into file.
#    This will be saved into the data folder.
#    Options: 'yes' or 'no'.
#    Default: 'yes'.
save_parameters = yes
